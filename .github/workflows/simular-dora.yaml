name: Simular Métricas DORA

on:
  workflow_dispatch:

jobs:
  simular-dora:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repositório
        uses: actions/checkout@v4

      - name: Configurar Git e criar novo branch com arquivo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH="feature/simulacao-dora-$(date +%s)"
          git checkout -b $BRANCH
          echo "print('simulando DORA')" > dora_$(date +%s).py
          git add .
          git commit -m "feat: simulação para métricas DORA"
          git push origin $BRANCH
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Criar Pull Request via API
        id: criar_pr_via_api
        run: |
          PR_DATA=$(jq -n \
            --arg title "Simulação DORA" \
            --arg head "${{ env.BRANCH }}" \
            --arg base "main" \
            --arg body "Este PR simula uma mudança para métricas DORA." \
            '{title: $title, head: $head, base: $base, body: $body}')

          RESPONSE=$(curl -s -X POST -H "Authorization: token ${{ secrets.GH_PAT }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/pulls \
               -d "$PR_DATA")
          
          echo "Resposta da criação do PR:"
          echo "$RESPONSE"
          
          PR_NUMBER=$(echo "$RESPONSE" | jq -r .number)
          
          if [ "$PR_NUMBER" = "null" ] || [ -z "$PR_NUMBER" ]; then
            echo "❌ Erro: Pull Request não foi criado corretamente."
            exit 1
          fi
          
          echo "✅ PR $PR_NUMBER criado com sucesso"
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

          PR_URL=$(echo "$RESPONSE" | jq -r .html_url)

          echo "PR_URL=$PR_URL" >> $GITHUB_ENV
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Esperar 10 segundos (simula tempo de revisão)
        run: sleep 10

      - name: Fazer Merge do PR via API
        run: |
          curl -s -X PUT -H "Authorization: token ${{ secrets.GH_PAT }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/pulls/${{ env.PR_NUMBER }}/merge \
               -d '{"merge_method": "merge"}'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Criar Issue com label bug
        run: |
          gh issue create --title "Bug após simulação DORA" --body "Simulação de bug para métricas DORA." --label "bug"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Esperar 20 segundos (simula tempo de recuperação)
        run: sleep 20

      - name: Fechar Issue
        run: |
          ISSUE_NUMBER=$(gh issue list --label "bug" --state open --limit 1 | awk '{print $1}')
          gh issue close "$ISSUE_NUMBER" --comment "Bug resolvido na simulação."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
